#pragma checksum "D:\EnViet\SourceAzure\sys.airline24h.com\DaiLy_EV\Views\Data\ImportDataBookerClub.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "58e8c6dbf399b56fb52297836c2d3ea83091d82c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Data_ImportDataBookerClub), @"mvc.1.0.view", @"/Views/Data/ImportDataBookerClub.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Data/ImportDataBookerClub.cshtml", typeof(AspNetCore.Views_Data_ImportDataBookerClub))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"58e8c6dbf399b56fb52297836c2d3ea83091d82c", @"/Views/Data/ImportDataBookerClub.cshtml")]
    public class Views_Data_ImportDataBookerClub : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<string>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(15, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "D:\EnViet\SourceAzure\sys.airline24h.com\DaiLy_EV\Views\Data\ImportDataBookerClub.cshtml"
  
    string s = Model;

#line default
#line hidden
            BeginContext(47, 2858, true);
            WriteLiteral(@"<div class=""modal-dialog modal-lg"">

    <!-- Modal content-->
    <div class=""modal-content"" style="" background: #2A3F54;"">
        <div class=""modal-header"">
            <button type=""button"" class=""close"" style="" color: #fff;"" data-dismiss=""modal"">&times;</button>
            <h1 style=""color: #FFF; font-size: 16px;"">Import Data</h1>
        </div>
        <div class=""modal-body"" style=""border-radius:8px; background-color:#fff;"">
            <div class=""row"">
                <div class=""row"">
                    <div class=""col-sm-6"">
                        <div class=""item form-group"">
                            <label class=""col-form-label"">
                                File đính kèm
                            </label>
                            <div class="""">
                                <div class=""inputfile-box"">
                                    <input type=""file"" id=""file"" class=""inputfile"" onchange=""uploadFile(this)"" name=""file"" accept=""application/vnd.ms-excel, applic");
            WriteLiteral(@"ation/vnd.openxmlformats-officedocument.spreadsheetml.sheet"">
                                    <label for=""file"">
                                        <span class=""file-button btn btn-primary"" style=""margin-bottom: 6px;"">
                                            Chọn tập tin
                                        </span>
                                    </label>

                                    <input id=""file-name"" class=""file-box"" placeholder=""Chọn tập tin"">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""col-sm-2"" style=""text-align:left"">
                        <div class=""form-group"">
                            <label>&nbsp;</label>
                            <div style=""margin-top: 6px;"">
                                <a href=""http://gateway.enviet-group.com/Files/fileBookerClub.xlsx"" style=""text-decoration:underline;font-size:18px;"" download="""">File mẫ");
            WriteLiteral(@"u </a>
                            </div>
                        </div>
                    </div>
                    <div class=""col-sm-2"">
                        <div class=""form-group"">
                            <label>&nbsp;</label>
                            <div>
                                <button type=""submit"" class=""btn btn-success btn-block"" onclick=""ImportExcel(this);"" name=""Import"" value=""Import"">Import</button>
                            </div>
                        </div>
                    </div>
                    <div class=""col-sm-2"">
                        <div class=""form-group"">
                            <label>&nbsp;</label>
                            <div>
                                <button type=""submit"" class=""btn btn-primary btn-block""");
            EndContext();
            BeginWriteAttribute("onclick", " onclick=\"", 2905, "\"", 2947, 3);
            WriteAttributeValue("", 2915, "SaveDataBookClubDetail(\'", 2915, 24, true);
#line 56 "D:\EnViet\SourceAzure\sys.airline24h.com\DaiLy_EV\Views\Data\ImportDataBookerClub.cshtml"
WriteAttributeValue("", 2939, Model, 2939, 6, false);

#line default
#line hidden
            WriteAttributeValue("", 2945, "\')", 2945, 2, true);
            EndWriteAttribute();
            BeginContext(2948, 952, true);
            WriteLiteral(@" name=""Save"" value=""Save"">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class=""row"">
                    <div class=""col-sm-12"">
                        <div class=""table-responsive"">
                            <table id=""gridBookerClubDetail"" class=""table table-striped jambo_table bulk_action"">
                                <thead>
                                    <tr class=""headings"">
                                        <th class=""column-title"">STT </th>
                                        <th class=""column-title"">Mã KH </th>
                                        <th class=""column-title"">Số vé </th>
                                        <th class=""column-title"">ID_Booker </th>
                                    </tr>
                                </thead>
                                <tbody>
");
            EndContext();
            BeginContext(4142, 5704, true);
            WriteLiteral(@"                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/xlsx.full.min.js""></script>
<script type=""text/javascript"" src=""https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.13.5/jszip.js""></script>

<script>
    function ImportExcel() {
       
        //Reference the FileUpload element.
        var fileUpload = document.getElementById(""file"");
        //Validate whether File is valid Excel file.
        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.xls|.xlsx)$/;
        if (regex.test(fileUpload.value.toLowerCase())) {
            if (typeof (FileReader) != ""undefined"") {
                var reader = new FileReader();

                //For Browsers other than IE.
                if (reader.readAsBinaryString) {
                    reader.onload = function (e)");
            WriteLiteral(@" {
                        GetTableFromExcel(e.target.result);
                    };
                    reader.readAsBinaryString(fileUpload.files[0]);
                } else {
                    //For IE Browser.
                    reader.onload = function (e) {
                        var data = """";
                        var bytes = new Uint8Array(e.target.result);
                        for (var i = 0; i < bytes.byteLength; i++) {
                            data += String.fromCharCode(bytes[i]);
                        }
                        GetTableFromExcel(data);
                    };
                    reader.readAsArrayBuffer(fileUpload.files[0]);
                }
            } else {
                alert(""This browser does not support HTML5."");
            }
        } else {
            alert(""Please upload a valid Excel file."");
        }
    };

    function GetTableFromExcel(data) {
      
        //Read the Excel File data in binary
        var workbook =");
            WriteLiteral(@" XLSX.read(data, {
            type: 'binary'
        });
        //get the name of First Sheet.
        var Sheet = workbook.SheetNames[0];
        //Read all rows from First Sheet into an JSON array.
        var excelRows = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[Sheet]);
        //
       
        var table = document.getElementById(""gridBookerClubDetail"");
        var tbody = document.querySelector(""#gridBookerClubDetail tbody"");
        //Add the data rows from Excel file.
        for (var i = 0; i < excelRows.length; i++) {

            if (excelRows[i].MaKH == null || excelRows[i].MaKH == """") {

                excelRows[i].MaKH = """";
            }
            else {
                excelRows[i].MaKH = excelRows[i].MaKH.toUpperCase();
            }
            if (excelRows[i].TicketNumber == null || excelRows[i].TicketNumber == """") {

                excelRows[i].TicketNumber = """";
            }
            else {
                excelRows[i].TicketNumber = excel");
            WriteLiteral(@"Rows[i].TicketNumber.toUpperCase();
            }
            if (excelRows[i].ID_Booker == null || excelRows[i].ID_Booker == """") {

                excelRows[i].ID_Booker = """";
            }
            else {
                excelRows[i].ID_Booker = excelRows[i].ID_Booker.toUpperCase();
            }
            var length = table.rows.length;
            /* Thêm chi tiết */
            //var row = table.insertRow(length);
            //var cell1 = row.insertCell(0);
            //var cell2 = row.insertCell(1);
            //var cell3 = row.insertCell(2);
            //cell1.innerHTML = Number(length);
            //cell2.innerHTML = excelRows[i].MaKH;
            //cell3.innerHTML = excelRows[i].SoLuong;

            // Insert a new row at the end of the table
            var newRow = tbody.insertRow();

            // Add cells to the row
            var cell1 = newRow.insertCell();
            var cell2 = newRow.insertCell();
            var cell3 = newRow.insertCell();
        ");
            WriteLiteral(@"    var cell4 = newRow.insertCell();

            // Set the content of each cell
            cell1.textContent = Number(length);
            cell2.textContent = excelRows[i].MaKH.trim();
            cell3.textContent = excelRows[i].TicketNumber.trim();
            cell4.textContent = excelRows[i].ID_Booker.trim();
         
          
        }
    };
   
    function SaveDataBookClubDetail(ID) {
        var table = document.getElementById(""gridBookerClubDetail"");
        var data = [];
        for (var i = 1; i < table.rows.length; i++) {
            var row = table.rows[i];
            var rowData = {
                MaKH: row.cells[1].textContent.trim(),
                TicketNumber: row.cells[2].textContent.trim(),
                ID_Booker: row.cells[3].textContent.trim(),
                ID_BookerClub: ID
            };
            data.push(rowData);
        }
     
        var jsonData = JSON.stringify(data);

        $.ajax({
            type: ""POST"",
            proces");
            WriteLiteral(@"sData: true,
            url: ""/Data/SaveDataBookerClubDetail"",
            data: {
                data: jsonData
            },
            success: function (response) {
                alert(response);
                //location.reload(true);
                window.location.href = ""/Data/CreateBookerClub?i=9"";
            },
            failure: function (response) {
                alert(response.responseText);
            },
            error: function (response) {
                alert(response.responseText);
            }
        });
    };
</script>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<string> Html { get; private set; }
    }
}
#pragma warning restore 1591
